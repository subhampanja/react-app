{"version":3,"sources":["app/Menu.js","app/todo/Todos.js","app/crud/Crud.js","app/Home.js","app/Errorpage.js","app/crud/users/Adduser.js","app/crud/users/Edituser.js","app/crud/users/Viewuser.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","type","data-toggle","data-target","id","exact","to","Todos","useState","settodoswork","settodosworkData","todos","todosValue","completeTodo","updateTodos","map","todo","isComplete","deteteTodo","updatedTodos","filter","console","log","placeholder","value","onChange","e","target","changetodoText","onClick","newTodo","uuidv4","work","key","checked","Crud","users","setUser","useEffect","loadUsers","a","axios","get","result","data","reverse","deleteUser","delete","user","index","scope","name","username","email","Home","Errorpage","Adduser","history","useHistory","phone","website","onInputChaneg","onSubmit","preventDefault","post","push","Edituser","useParams","loadUser","put","Viewuser","userData","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d9ae430.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Menu = () =>{\r\n    return(\r\n        <div className=\"\">\r\n            <h1 className=\"text-center text-white bg-info\">React Web Apps</h1>\r\n            <nav className=\"navbar navbar-expand-md bg-dark\">\r\n\t\t\t<div className=\"container-fluid navigation\">\r\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseMenu\">\r\n\t\t\t\t\t<p className=\"navbar-toggler-icon text-white bg-white\"></p>\r\n\t\t\t\t</button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapseMenu\">\r\n\t\t\t\t\t<ul className=\"navbar-nav text-center\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<NavLink exact to=\"/\" className=\"nav-link text-white font-weight-bold btn btn-primary btn-sm mr-2\">HOME</NavLink>\r\n                        </li>\r\n                        &nbsp;\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<NavLink exact to=\"/crud\" className=\"nav-link text-white font-weight-bold btn btn-primary btn-sm mr-2\">CRUD</NavLink>\r\n                        </li>\r\n                        &nbsp;\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<NavLink exact to=\"/todo\" className=\"nav-link text-white font-weight-bold btn btn-primary btn-sm mr-2\">TODO</NavLink>\r\n                        </li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Todos.css';\r\n\r\nconst Todos = () => {\r\n\r\n    const[settodoswork , settodosworkData] = useState(\"\");\r\n\r\n    const[todos, todosValue] = useState([\r\n\r\n    ])\r\n\r\n    const changetodoText = (e) => {\r\n        //set todo text\r\n        // console.log(e.target.value);\r\n        settodosworkData(e.target.value);\r\n    };\r\n\r\n    const addtodo = () => {\r\n        \r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            work: settodoswork,\r\n            isComplete: false\r\n        };\r\n        // console.log(newTodo)\r\n        todosValue([newTodo, ...todos])\r\n        console.log(newTodo);\r\n        settodosworkData(\"\")\r\n\r\n    };\r\n\r\n    const completeTodo = id =>{\r\n        // console.log(id)\r\n        const updateTodos = todos.map(todo => {\r\n            if(todo.isComplete == false){\r\n                if(todo.id == id){\r\n                    todo.isComplete = true;\r\n                    return todo;\r\n                }\r\n                return todo;\r\n            }\r\n            else{\r\n                if(todo.id == id){\r\n                    todo.isComplete = false;\r\n                    return todo;\r\n                }\r\n                return todo;\r\n            }\r\n        })\r\n        // console.log(updateTodos);\r\n        todosValue(updateTodos);\r\n    }\r\n\r\n    const deteteTodo = id =>{\r\n        const updatedTodos = todos.filter(todo => todo.id != id)\r\n        todosValue(updatedTodos);\r\n        console.log(updatedTodos);\r\n    }\r\n\r\n    return(\r\n        <div className=\"d-flex justify-content-center\">\r\n                <div className=\"card shadow w-50 \">\r\n                <hr />\r\n                    <div className=\"card-header\">\r\n                        <h1 className=\"text-primary text-center\">React Todo</h1>\r\n                        <hr />\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\"\r\n                             placeholder=\"Your Todo\" \r\n                             value={settodoswork}\r\n                             onChange={(e) => changetodoText(e)} />\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-primary\" onClick={addtodo}>Add</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        todos.map(todos => {\r\n                            return(\r\n                            <li className=\"list-group-item d-flex justify-content-between\" key={todos.id}>\r\n                                <div>\r\n                                    <input type=\"checkbox\" checked={todos.isComplete}\r\n                                    onChange={() => completeTodo(todos.id)}/>\r\n                                    <span className={todos.isComplete ? 'completed' : null}>\r\n                                        {todos.work}\r\n                                    </span>\r\n                                </div>\r\n                                {/* <i className=\"far fa-trash-alt\" ></i> */}\r\n                                <button className=\"btn btn-danger btn-sm\" onClick={() => deteteTodo(todos.id)}>X</button>\r\n                            </li>\r\n                            )\r\n                        })\r\n                    }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Todos;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Crud = () => {\r\n\r\n    const [users, setUser] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    const loadUsers = async () =>{\r\n        const result = await axios.get(\"http://localhost:3001/users\");\r\n        setUser(result.data.reverse());\r\n    }\r\n\r\n    const deleteUser = async id => {\r\n        await axios.delete(`http://localhost:3001/users/${id}`);\r\n        loadUsers();\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\"><br />\r\n            <Link className=\"btn btn-outline-primary btn-sm my-2\" to=\"/crud/users/adduser\">Add User</Link>\r\n            <table className=\"table border shadow\">\r\n                <thead className=\"thead-dark text-center\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>name</th>\r\n                        <th>Username</th>\r\n                        <th>Email</th>\r\n                        <th>action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"text-center\">\r\n                    {\r\n                        users.map((user, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{index + 1}</th>\r\n                            <th>{user.name}</th>\r\n                            <th>{user.username}</th>\r\n                            <th>{user.email}</th>\r\n                            <th>\r\n                                <Link className=\"btn btn-primary btn-sm mr-2\" to={`/crud/users/viewuser/${user.id}`}>View</Link>\r\n                                <Link className=\"btn btn-warning btn-sm mr-2\" to={`/crud/users/edituser/${user.id}`}>Edite</Link>\r\n                                <Link className=\"btn btn-danger btn-sm\" onClick={() => deleteUser(user.id)}>Delete</Link>\r\n                            </th>\r\n                        </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Crud;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div className=\"text-center\">\r\n            <h1>I am Subham Panja</h1>\r\n            <h4>I am learning React JS</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Errorpage = () => {\r\n    return(\r\n        <div className=\"text-center text-danger py-3 shadow\">\r\n            <h1>404 !!!</h1>\r\n            <h2>Page Not Found</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Errorpage;","import React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst Adduser = () =>{\r\n\r\n    let history = useHistory();\r\n\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        website: \"\",\r\n    });\r\n\r\n    const {name, username , email , phone , website} = user;\r\n    const onInputChaneg = e => {\r\n        // console.log(e.target.name);\r\n        // setUser(e.target.value);\r\n        setUser({...user,[e.target.name]: e.target.value});\r\n        // console.log({...user,[e.target.name]: e.target.value});\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        await axios.post(\"http://localhost:3001/users\", user);\r\n        history.push(\"/crud\");\r\n    }\r\n    return(\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"w-75 mx-auto shadow p-5\">\r\n                    <h2 className=\"text-center mb-4\">Add A User</h2>\r\n                    <form onSubmit={e => onSubmit(e)}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Name\"\r\n                              name=\"name\"\r\n                              value={name}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Username\"\r\n                              name=\"username\"\r\n                              value={username}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Email\"\r\n                              name=\"email\"\r\n                              value={email}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"number\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Phone\"\r\n                              name=\"phone\"\r\n                              value={phone}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Website\"\r\n                              name=\"website\"\r\n                              value={website}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                              \r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-primary\">Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Adduser;","import React,{useState , useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useHistory , useParams} from 'react-router-dom';\r\n\r\n\r\nconst Edituser = () =>{\r\n\r\n    let history = useHistory();\r\n\r\n    const { id } = useParams();\r\n    // alert(id);\r\n\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        website: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadUser();\r\n    }, []);\r\n\r\n    const {name, username , email , phone , website} = user;\r\n    const onInputChaneg = e => {\r\n        // console.log(e.target.value);\r\n        // setUser(e.target.value);\r\n        setUser({...user,[e.target.name]: e.target.value});\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault()\r\n        await axios.put(`http://localhost:3001/users/${id}`, user);\r\n        history.push(\"/crud\");\r\n    }\r\n\r\n    const loadUser = async () => {\r\n        const result = await axios.get(`http://localhost:3001/users/${id}`)\r\n        // console.log(result.data);\r\n        setUser(result.data);\r\n    }\r\n    return(\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"w-75 mx-auto shadow p-5\">\r\n                    <h2 className=\"text-center mb-4\">Edit A User</h2>\r\n                    <form onSubmit={e => onSubmit(e)}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Name\"\r\n                              name=\"name\"\r\n                              value={name}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Username\"\r\n                              name=\"username\"\r\n                              value={username}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Email\"\r\n                              name=\"email\"\r\n                              value={email}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"number\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Phone\"\r\n                              name=\"phone\"\r\n                              value={phone}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\"\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"Enter Your Website\"\r\n                              name=\"website\"\r\n                              value={website}\r\n                              onChange={e => onInputChaneg(e)} />\r\n                              \r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-warning\">Update</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edituser;","import React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Viewuser = () => {\r\n\r\n    const {id} = useParams();\r\n    // alert(id);\r\n    const [user , userData] = useState({\r\n        name: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        website: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadUser()\r\n    }, []);\r\n\r\n    const {name , username , email , phone , website } = user;\r\n\r\n    const loadUser = async () => {\r\n        const result = await axios.get(`http://localhost:3001/users/${id}`);\r\n        userData(result.data);\r\n        console.log(result.data);\r\n    }\r\n    return(\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"card shadow w-50 py-3 px-3\">\r\n                <div className=\"card-header text-center\"> \r\n                    <h1>USER DETAILS</h1>\r\n                </div>\r\n                <h3> Name : {name}</h3>\r\n                <h3> Username : {username}</h3>\r\n                <h3> Phone : {phone}</h3>\r\n                <h3> Email : {email}</h3>\r\n                <h3> Website : {website}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Viewuser;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Menu from './app/Menu';\nimport Todos from './app/todo/Todos'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Crud from './app/crud/Crud';\nimport Home from './app/Home';\nimport Errorpage from './app/Errorpage';\nimport Adduser from './app/crud/users/Adduser';\nimport Edituser from './app/crud/users/Edituser';\nimport Viewuser from './app/crud/users/Viewuser';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Router>\n        <Menu />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/crud\" component={Crud} />\n          <Route exact path=\"/todo\" component={Todos} />\n          <Route exact path=\"/crud/users/adduser\" component={Adduser} />\n          <Route exact path=\"/crud/users/edituser/:id\" component={Edituser} />\n          <Route exact path=\"/crud/users/viewuser/:id\" component={Viewuser} />\n          <Route component={Errorpage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n                <div>\n                  <App />\n                </div>,\n  document.getElementById('root'),\n\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}